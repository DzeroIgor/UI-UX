$colorDark: #333;
$colorLight: #ffa500;
$thickness: 5px;
$sizeW: 800px;
$sizeH: 600px;

@mixin reset {
    margin: 0;
    padding: 0;
}

// @mixin generate-image-styles($start, $end, $image-prefix, $url-prefix) {
//     @for $i from $start through $end {
//         &:nth-child(#{$i}) {
//             >div {
//                 background-image: url(#{$url-prefix}#{$image-prefix}-#{$i}.jpg);
//             }
//         }
//     }
// }

@mixin effect-1 {
    // opacity: 0;
    // animation: effect-1 5s 1;
    // animation-delay: 0.5s * $x;
    // animation-delay: 0.5s * $y;
    // animation-delay: 0.5s * ($x + $y);
    // animation-delay: 0.5s * random(10);
}

body {
    background-color: $colorDark;
    width: 100vw;
    height: 100vh;
    @include reset;
}

.carousel {
    width: $sizeW;
    height: $sizeH;
    // border: $thickness solid lighten($colorDark, 10);
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    margin: auto;

    .slide {
        // border: 1px solid green;
        width: inherit;
        height: inherit;
        position: absolute;
        // @include generate-image-styles(1, 7, "Slide", "images/");
        
        
        @for $i from 1 through 10 {
        
            &:nth-child(#{$i}) {
                >div {
                    background-image: url(images/Slide-#{$i}.jpg);
                }
            }
        }

        // &:nth-child(1) {
        //     >div {
        //         background-image: url(images/Slide-1.jpg);
        //     }
        // }     
        
        @for $child from 1 through 10 {
            &:nth-child(#{$child})
            >div {
                box-sizing: border-box;
                width: $sizeW / 8;
                height: $sizeH / 6;
                float: left;
                
                @for $y from 0 through 5 {
                    @for $x from 0 through 7 {
                        &:nth-child(#{$y * 8 + $x + 1 }) {
                            background-position-x: $x * - $sizeW / 8;
                            background-position-y: $y * - $sizeH / 6;   
                            
                            transform: translateX(-2 * $sizeW) translateY(-2 * $sizeH) rotate(-1000deg);
                            animation: effect-2 .25s * random(5) 1;
                            animation-delay: 0.2s * random(10) + ($child - 1) * 3s;
                                                        
                            animation-fill-mode: forwards;
                        }
                    }
                }
                
            }
        }


    }
}

@keyframes effect-1 {
    from {
        opacity: 0;
    }
    to {
        opacity: 1;
    }
}
@keyframes effect-2 {
    from {
        transform: translateX(-2 * $sizeW) translateY(-2 * $sizeH) rotate(-1000deg);
    }
    to {
        transform: translateX(0) translateY(0) rotate(0);
    }
}